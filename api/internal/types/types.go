// Code generated by goctl. DO NOT EDIT.
package types

type ReqLogin struct {
	ValiCode string `json:"vali_code"`
}

type RespLogin struct {
	ID   string `json:"_id"`
	Name string `json:"name"`
	JwtToken
}

type JwtToken struct {
	AccessToken  string `json:"access_token,omitempty"`
	AccessExpire int64  `json:"access_expire,omitempty"`
	RefreshAfter int64  `json:"refresh_after,omitempty"`
}

type ReqUserId struct {
	ID string `path:"_id"`
}

type User struct {
	ID       string `json:"_id"`
	Avatar   string `json:"avatar,optional"`
	Birthday string `json:"birthday,optional"`
	Blog     string `json:"blog,optional"`
	City     string `json:"city,optional"`
	Email    string `json:"email,optional"`
	Name     string `json:"name,optional"`
	Phone    int64  `json:"phone,optional"`
	RealName string `json:"real_name,optional"`
	Summary  string `json:"summary,optional"`
}

type CommUserResp struct {
	Ok    bool   `json:"ok"`
	Error string `json:"error"`
}

type ReqInterviewId struct {
	ID     string `path:"_id"`
	UserID string `json:"user_id"`
}

type Author struct {
	ID   string `json:"_id"`
	Name string `json:"name"`
}

type Interview struct {
	ID          string   `json:"_id,omitempty"`
	Author      Author   `json:"author"`
	ClickNum    int64    `json:"click_num,default=0"`
	Good        int64    `json:"good,default=0"`
	HardStatus  string   `json:"hard_status"`
	HotNum      int64    `json:"hot_num,default=0"`
	Summary     string   `json:"summary,omitempty"`
	Tags        []string `json:"tags"`
	Title       string   `json:"title"`
	UpdatedTime int64 `json:"updated_time,omitempty"`
	Status      bool     `json:"status,default=false"`
}

type Interview_detail struct {
	Interview
	StarNum     int64  `json:"star_num,default=0"`
	Bad         int64  `json:"bad,default=0"`
	Content     string `json:"content"`
	CreatedTime int64 `json:"created_time,omitempty"`
}

type ReqInterviewAdd struct {
	Author      Author   `json:"author"`
	HardStatus  string   `json:"hard_status"`
	Summary     string   `json:"summary,omitempty"`
	Tags        []string `json:"tags"`
	Title       string   `json:"title"`
	Content     string `json:"content"`
}

type ReqInterviews struct {
	Tags   []string `json:"tags"`
	Search string   `json:"search"`
	UserID string   `json:"user_id"`
}

type CommInterviewsResp struct {
	Ok    bool   `json:"ok"`
	Error string `json:"error"`
}
